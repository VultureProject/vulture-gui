{% if darwin_actions %}
    ###################
    # DARWIN FILTERS  #
    ###################
    {% set darwin_ns = namespace(enrichments=[]) -%}

    {% for action in darwin_actions -%}
        {# Set default calls for filter type and techno only if custom ones are not configured (and defaults exist) -#}
        {% if not action.calls and darwin_default_calls and darwin_default_calls[action.filter_type] -%}
            {% for call in darwin_default_calls[action.filter_type] -%}
                {% set _ = action.calls.append({"inputs": call.inputs.copy(), "outputs": call.outputs.copy()}) -%}
            {% endfor -%}
        {% endif -%}
        {# Set enrichment variables' list -#}
        {% if not action.disable_enrichment and frontend.darwin_mode in ["back", "both"] -%}
            {% for call in action.calls -%}
                {% set _ = darwin_ns.enrichments.extend(call.outputs) -%}
            {% endfor -%}
        {% endif -%}
        {# set buffer source as first input variable if defined -#}
        {% if action.buffer_source %}
            {% for call in action.calls -%}
                {% set _ = call.inputs.insert(0, action.buffer_source) -%}
            {% endfor -%}
        {% endif -%}
    {% endfor -%}

    {# Set enrichment variables for Rsyslog #}
    {% for output in darwin_ns.enrichments|unique -%}
    reset $!advens{{output}}!darwin = "[";
    {% endfor %}

    {% for action in darwin_actions -%}
    # FILTER {{ action.filter_type }}
    {% for call in action.calls -%}
    {% set mode = "darwin" if action.disable_enrichment else frontend.darwin_mode -%}
    unset $!mmdarwin!{{action.filter_type}}_certitude;
    action( type="mmdarwin"
            key="{{action.filter_type}}_certitude"
            socketpath="{{ action.filter_socket }}"
            response="{{ mode }}"
            fields={{ call.inputs | tojson }})
    {% if mode in ["back", "both"] -%}
    {% for output in call.outputs -%}
    {# If certitude is between threshold and 100 (< 101 to exclude errors), then there is a match ! -#}
    if cnum($!mmdarwin!{{action.filter_type}}_certitude) >= {{action.threshold}} and cnum($!mmdarwin!{{action.filter_type}}_certitude) < 101 then {
        set $!advens{{output}}!darwin = $!advens{{output}}!darwin & "{% for tag in action.enrichment_tags %}\"{{tag}}\",{% endfor %}";
    }
    {% endfor %}
    {% endif -%}
    {% endfor %}
    {% endfor %}

    {% for output in darwin_ns.enrichments|unique -%}
    {# complete the enrichment variable(s) and parse the resulting json to have a valid list -#}
    set $.ret = parse_json($!advens{{output}}!darwin & "]", "\$!advens{{output}}!darwin");
    {% endfor %}

    # REDIS CACHING
    if $!mmdarwin!darwin_id != "" then {

        action(type="omhiredis"
            server="127.0.0.3"
            serverport="6379"
            mode="set"
            key="darwin_redis_key"
            dynakey="on"
            expiration="10"
            template="{{frontend.ruleset}}_redis"
            action.resumeRetryCount="3"
            action.resumeInterval="1")
    }

    ######################
    # DARWIN FILTERS END #
    ######################
{% endif %}