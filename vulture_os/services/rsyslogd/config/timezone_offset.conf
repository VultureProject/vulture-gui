
{% for timezone in timezones -%}
# Timezone {{timezone.name}}
lookup_table(name="{{timezone.name_safe}}_local" file="{{lookup_dbs_path}}/{{timezone.name_safe}}_local.lookup")
lookup_table(name="{{timezone.name_safe}}_utc" file="{{lookup_dbs_path}}/{{timezone.name_safe}}_utc.lookup")
{% endfor %}

{% for timezone in timezones -%}
# Timezone {{timezone.name}}
ruleset(name="{{timezone.name_safe}}_get_offset" queue.type="direct") {
    set $.unix_timestamp = parse_time($!timestamp & "Z");
    if ($.unix_timestamp != 0) then {
        set $.ret = lookup("{{timezone.name_safe}}_local", $.unix_timestamp);
        if ($.ret == "OVERLAP") then {
            # The local timestamp can be valid for 2 offsets, the correct offset can only be decided by looking
            # at the current unix timestamp
                set $.warning = "Had to use unix timestamp";
            set $.ret = lookup("{{timezone.name_safe}}_utc", $$now-unixtimestamp);
            if ($.ret != "") then {
                set $!tz = $.ret;
            } else {
                set $.error = "Could not get timezone offset from timestamp";
            }
        } else if ($.ret == "IMPOSSIBLE") then {
            set $.error = "Timestamp '" & $!timestamp & "' is not possible for the timezone {{timezone.name}}";
        } else if ($.ret != "") then {
            set $!tz = $.ret;
        }

    } else {
        set $.error = "Cannot represent " & $!timestamp & " as a valid unix timestamp";
    }
}

{% endfor %}
