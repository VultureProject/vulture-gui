
template(name="tpl_pf_file" type="list" option.jsonf="on") {
        property(outname="timestamp" name="$!time" dateformat="rfc3339" format="jsonf")
        property(outname="action" name="$!action" format="jsonf")
        property(outname="ttl" name="$!ttl" format="jsonf")
        property(outname="direction" name="$!direction" format="jsonf")
        property(outname="if" name="$!if" format="jsonf")
        property(outname="proto" name="$!proto" format="jsonf")
        property(outname="len" name="$!len" format="jsonf")
        property(outname="rulenb" name="$!rulenb" format="jsonf")
        property(outname="src_ip" name="$!src_ip" format="jsonf")
        property(outname="dst_ip" name="$!dst_ip" format="jsonf")
        property(outname="src_tcp_port" name="$!src_tcp_port" format="jsonf")
        property(outname="dst_tcp_port" name="$!dst_tcp_port" format="jsonf")
        property(outname="src_udp_port" name="$!src_udp_port" format="jsonf")
        property(outname="dst_udp_port" name="$!dst_udp_port" format="jsonf")
}

template(name="garbage_pf" type="string" string="/var/log/garbage/pf_%SYSLOGTAG%-%timestamp:::date-year%.%timestamp:::date-month%.%timestamp:::date-day%-%timestamp:::date-hour%.log")

input(type="imfile" file="/var/log/pf/pf.log" ruleset="PF" Tag="PF")

Ruleset(name="PF") {
    action(type="mmnormalize" rulebase="/usr/local/etc/rsyslog.d/pf.rb")

    if $parsesuccess == "OK" then {

      if $!action == 1 then {
        set $!action = "block";
      } else if $!action == 0 then {
        set $!action = "pass";
      } else if $!action == 8 then {
        set $!action = "rdr";
      }

      if $!direction == 1 then {
        set $!direction = "in";
      } else if $!action == 0 then {
        set $!direction = "out";
      }

      if $!proto == 6 then {
        set $!proto = "TCP";
      } else if $!proto == 17 then {
        set $!proto = "UDP";
      }

      set $!time = format_time($!timestamp_app, "date-rfc3339");

      action(type="omfile"
          template="tpl_pf_file"
          File="/var/log/pf/parsed.log"
          asyncWriting="on"
          flushInterval="1")

      action(type="omfile"
             Dynafile="garbage_pf"
             action.ExecOnlyWhenPreviousIsSuspended="on"
             CreateDirs="on"
             template="raw_message")
    } else {
        action(type="omfile" Dynafile="garbage_pf" CreateDirs="on" template="raw_message")
    }
    stop
}
