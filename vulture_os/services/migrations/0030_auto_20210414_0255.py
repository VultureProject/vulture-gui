# Generated by Django 3.0.5 on 2021-04-14 02:55

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('services', '0029_auto_20210317_0955'),
    ]

    operations = [
        migrations.AddField(
            model_name='frontend',
            name='carbon_black_apikey',
            field=models.TextField(default='', help_text='API key used to retrieve logs', verbose_name='CarbonBlack API key'),
        ),
        migrations.AddField(
            model_name='frontend',
            name='carbon_black_host',
            field=models.TextField(default='defense.conferdeploy.net', help_text='Hostname (without scheme or path) of the CarbonBlack server', verbose_name='CarbonBlack Host'),
        ),
        migrations.AddField(
            model_name='frontend',
            name='carbon_black_orgkey',
            field=models.TextField(default='', help_text='Organisation name', verbose_name='CarbonBlack organisation name'),
        ),
        migrations.AddField(
            model_name='frontend',
            name='filebeat_config',
            field=models.TextField(default='', help_text='Filebeat Input configuration. No output allowed here, as it is handled by Vulture'),
        ),
        migrations.AddField(
            model_name='frontend',
            name='filebeat_listening_mode',
            field=models.TextField(choices=[('tcp', 'TCP'), ('udp', 'UDP'), ('file', 'File'), ('api', 'Vendor specific API')], default='tcp', help_text='TCP mode = HAProxy, UDP mode = Filebeat'),
        ),
        migrations.AddField(
            model_name='frontend',
            name='filebeat_module',
            field=models.TextField(choices=[('_custom', 'Custom Filebeat config'), ('activemq', 'Activemq'), ('aws', 'Aws'), ('azure', 'Azure'), ('barracuda', 'Barracuda'), ('bluecoat', 'Bluecoat'), ('cef', 'Cef'), ('checkpoint', 'Checkpoint'), ('cisco', 'Cisco'), ('coredns', 'Coredns'), ('crowdstrike', 'Crowdstrike'), ('cyberark', 'Cyberark'), ('cylance', 'Cylance'), ('envoyproxy', 'Envoyproxy'), ('f5', 'F5'), ('fortinet', 'Fortinet'), ('gcp', 'Gcp'), ('google_workspace', 'Google_workspace'), ('googlecloud', 'Googlecloud'), ('gsuite', 'Gsuite'), ('ibmmq', 'Ibmmq'), ('imperva', 'Imperva'), ('infoblox', 'Infoblox'), ('iptables', 'Iptables'), ('juniper', 'Juniper'), ('microsoft', 'Microsoft'), ('misp', 'Misp'), ('mssql', 'Mssql'), ('mysqlenterprise', 'Mysqlenterprise'), ('netflow', 'Netflow'), ('netscout', 'Netscout'), ('o365', 'O365'), ('okta', 'Okta'), ('oracle', 'Oracle'), ('panw', 'Panw'), ('proofpoint', 'Proofpoint'), ('rabbitmq', 'Rabbitmq'), ('radware', 'Radware'), ('snort', 'Snort'), ('snyk', 'Snyk'), ('sonicwall', 'Sonicwall'), ('sophos', 'Sophos'), ('squid', 'Squid'), ('suricata', 'Suricata'), ('tomcat', 'Tomcat'), ('zeek', 'Zeek'), ('zoom', 'Zoom'), ('zscaler', 'Zscaler')], default='tcp', help_text='Filebeat built-in module'),
        ),
        migrations.AlterField(
            model_name='frontend',
            name='listening_mode',
            field=models.TextField(choices=[('udp', 'UDP'), ('tcp', 'TCP'), ('tcp,udp', 'TCP & UDP'), ('relp', 'RELP (TCP)'), ('file', 'FILE'), ('api', 'Vendor specific API'), ('kafka', 'KAFKA'), ('redis', 'REDIS')], default='tcp', help_text='TCP mode = HAProxy, UDP mode = Rsyslog'),
        ),
        migrations.AlterField(
            model_name='frontend',
            name='mode',
            field=models.TextField(choices=[('tcp', 'TCP'), ('http', 'HTTP'), ('log', 'LOG (Rsyslog)'), ('filebeat', 'LOG (Filebeat)'), ('impcap', 'PCAP')], default='tcp', help_text='Listening mode'),
        ),
        migrations.CreateModel(
            name='FilebeatSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
    ]
