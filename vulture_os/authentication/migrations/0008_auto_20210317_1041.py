# Generated by Django 3.0.5 on 2021-03-17 10:41

import authentication.user_portal.models
import bson.objectid
from django.db import migrations, models
import django.db.models.deletion
import djongo.models.fields
import toolkit.system.hashes
from toolkit.mongodb.mongo_base import MongoBase


def update_repo_attributes(apps, schema_editor):
    # Manually delete all Darwin filters to prevent migration issue, they will be re-created in loaddata
    m = MongoBase()
    m.connect_primary()
    # If the node is not yet installed, no need to drop collections
    if m.db and m.db['vulture']:
        coll = m.db['vulture']['authentication_userauthentication']
        if coll:
            for portal in coll.find():
                repo_attributes = [
                    {
                        'condition_var_kind': "constant",
                        'condition_var_name': "1",
                        'condition_criterion': "equals",
                        'condition_match': "1",
                        'action_var_name': r['key'],
                        'action_var_kind': r['source_attr'],
                        'action_var': r['key']
                    }
                    for r in portal.get('repo_attributes', [])
                ]
                coll.update_one({'id': portal['id']}, {'$set': {'repo_attributes': repo_attributes}})
                print("Portal {} updated".format(portal['name']))

class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0007_auto_20210317_1013'),
    ]

    operations = [
        migrations.RunPython(update_repo_attributes, migrations.RunPython.noop),
        migrations.RemoveField(
            model_name='repoattributes',
            name='key',
        ),
        migrations.RemoveField(
            model_name='repoattributes',
            name='source_attr',
        ),
        migrations.AddField(
            model_name='repoattributes',
            name='action_var',
            field=models.TextField(default='true'),
        ),
        migrations.AddField(
            model_name='repoattributes',
            name='action_var_kind',
            field=models.TextField(choices=[('constant', 'Constant value'), ('claim', 'Claim attribute'), ('repo', 'Repository attribute'), ('merge', 'Merge attribute as list'), ('claim_pref', 'Use claim, or repo attr if not present'), ('repo_pref', 'Use repo attr, or claim if not present')], default='constant'),
        ),
        migrations.AddField(
            model_name='repoattributes',
            name='action_var_name',
            field=models.TextField(default='admin'),
        ),
        migrations.AddField(
            model_name='repoattributes',
            name='condition_criterion',
            field=models.TextField(choices=[('equals', 'equals to'), ('exists', 'exists'), ('not exists', 'does not exists'), ('contains', 'contains'), ('not contains', 'does not contains'), ('startswith', 'starts with'), ('endswith', 'ends with')], default='equals'),
        ),
        migrations.AddField(
            model_name='repoattributes',
            name='condition_match',
            field=models.TextField(default='test@abcd.fr'),
        ),
        migrations.AddField(
            model_name='repoattributes',
            name='condition_var_kind',
            field=models.TextField(choices=[('claim', 'Claim attribute'), ('repo', 'Repository attribute'), ('constant', 'Constant')], default='claim'),
        ),
        migrations.AddField(
            model_name='repoattributes',
            name='condition_var_name',
            field=models.TextField(default='email'),
        ),
    ]
