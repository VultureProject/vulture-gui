# Generated by Django 2.1.3 on 2019-12-18 09:55

from django.db import migrations, models


def remove_reputation_user_agent(apps, schema_editor):
    DarwinFilter = apps.get_model('darwin', 'DarwinFilter')
    FilterPolicy = apps.get_model('darwin', 'FilterPolicy')

    DarwinFilter.objects.filter(name__in=["reputation", "user_agent"]).delete()


def update_darwin_filter_config(apps, schema_editor):
    FilterPolicy = apps.get_model('darwin', 'FilterPolicy')

    filters = FilterPolicy.objects.all()
    for filter in filters:
        filter.config["redis_socket_path"] = "/var/sockets/redis/redis.sock"
        filter.config["alert_redis_list_name"] = "darwin_alerts"
        filter.config["alert_redis_channel_name"] = "darwin.alerts"
        filter.config["log_file_path"] = "/var/log/darwin/alerts.log"

        if filter.filter.name == 'tanomaly' and filter.config.get("redis_list_name", None):
                del filter.config["redis_list_name"]

        filter.save()


def update_parameters(apps, schema_editor):
    FilterPolicy = apps.get_model('darwin', 'FilterPolicy')

    # Only take default filters
    filters = FilterPolicy.objects.filter(id__lte=8)
    for filter in filters:
        if filter.filter.name == "dga" or filter.filter.name == "hostlookup":
            filter.cache_size = 1000
        else:
            filter.cache_size = 0

        if filter.filter.name == "tanomaly":
            filter.mmdarwin_parameters = []
            filter.mmdarwin_enabled = False

        filter.log_level = "WARNING"
        filter.nb_thread = 5

        filter.save()

class Migration(migrations.Migration):

    dependencies = [
        ('darwin', '0008_auto_20191119_0339'),
    ]

    operations = [
        migrations.RunPython(remove_reputation_user_agent),
        migrations.RunPython(update_darwin_filter_config),
        migrations.RunPython(update_parameters),
    ]
