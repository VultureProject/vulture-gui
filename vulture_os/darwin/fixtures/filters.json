[
  {
    "model": "darwin.DarwinPolicy",
    "pk": 1,
    "fields": {
      "name": "Internal Policy",
      "description": "Policy used to contain all internal filters",
      "is_internal": true
    }
  },
  {
    "model": "darwin.DarwinPolicy",
    "pk": 2,
    "fields": {
      "name": "Default Detect DGA",
      "description": "This policy is an example of DGA detection",
      "is_internal": false
    }
  },
  {
    "model": "darwin.DarwinPolicy",
    "pk": 3,
    "fields": {
      "name": "Default Detect Network Anomaly",
      "description": "This policy is an example of network anomaly detection",
      "is_internal": false
    }
  },
  {
    "model": "darwin.DarwinFilter",
    "pk": 1,
    "fields": {
      "name": "sess",
      "longname": "Session",
      "description": "Checks if a user is connected or not, by storing and querying Redis with session cookies",
      "is_internal": true,
      "can_be_buffered": false
    }
  },
  {
    "model": "darwin.DarwinFilter",
    "pk": 2,
    "fields": {
      "name": "dgad",
      "longname": "Domain Generated by Algorithm Detection",
      "description": "Detects the Domain Generation Algorithms (DGAs)",
      "is_internal": false,
      "can_be_buffered": false
    }
  },
  {
    "model": "darwin.DarwinFilter",
    "pk": 4,
    "fields": {
      "name": "unad",
      "longname": "UNsupervised Anomaly Detection",
      "description": "Detects abnormal connection behaviours (outliers) in network traffic",
      "is_internal": false,
      "can_be_buffered": true
    }
  },
  {
    "model": "darwin.DarwinFilter",
    "pk": 6,
    "fields": {
      "name": "conn",
      "longname": "Connection",
      "description": "Detects new connections between assets",
      "is_internal": false,
      "can_be_buffered": false
    }
  },
  {
    "model": "darwin.DarwinFilter",
    "pk": 7,
    "fields": {
      "name": "lkup",
      "longname": "Lookup",
      "description": "Searches for matches in lookup files, it can be used to search for specific IPs, FQDNs, domains, URLs...",
      "is_internal": false,
      "can_be_buffered": false
    }
  },
  {
    "model": "darwin.DarwinFilter",
    "pk": 8,
    "fields": {
      "name": "sofa",
      "longname": "Scan Outlier Finder and Analysis",
      "description": "Allows finding outliers in scan results coming from network scanners",
      "is_internal": false,
      "can_be_buffered": true
    }
  },
  {
    "model": "darwin.DarwinFilter",
    "pk": 9,
    "fields": {
      "name": "bufr",
      "longname": "Buffer",
      "description": "Caches data in Redis to request other filters with bulks at regular intervals",
      "is_internal": true,
      "can_be_buffered": false
    }
  },
  {
    "model": "darwin.DarwinFilter",
    "pk": 10,
    "fields": {
      "name": "yara",
      "longname": "Yara Engine",
      "description": "Scans arbitrary chunks of data with the Yara engine",
      "is_internal": false,
      "can_be_buffered": false
    }
  },
  {
    "model": "darwin.DarwinFilter",
    "pk": 11,
    "fields": {
      "name": "vast",
      "longname": "STatistical VAriation",
      "description": "Detection of abnormal variation through statistical approach",
      "is_internal": false,
      "can_be_buffered": true
    }
  },
  {
    "model": "darwin.DarwinFilter",
    "pk": 12,
    "fields": {
      "name": "vaml",
      "longname": "VAriation Machine Learning",
      "description": "Detection of abnormal variation through supervised regression",
      "is_internal": false,
      "can_be_buffered": true
    }
  },
  {
    "model": "darwin.FilterPolicy",
    "pk": 1,
    "fields": {
      "filter_type": 1,
      "policy": 1,
      "enabled": true,
      "nb_thread": 5,
      "log_level": "WARNING",
      "output": "NONE",
      "next_filter": null,
      "config": {
        "redis_socket_path": "/var/sockets/redis/redis.sock"
      },
      "mmdarwin_parameters": []
    }
  },
  {
    "model": "darwin.FilterPolicy",
    "pk": 2,
    "fields": {
      "filter_type": 2,
      "policy": 2,
      "enabled": true,
      "nb_thread": 5,
      "log_level": "WARNING",
      "output": "NONE",
      "next_filter": null,
      "config": {
        "token_map": "fdga_tokens.csv",
        "model": "fdga.pb",
        "max_tokens": 75
      },
      "mmdarwin_parameters": []
    }
  },
  {
    "model": "darwin.FilterPolicy",
    "pk": 3,
    "fields": {
      "filter_type": 4,
      "policy": 3,
      "enabled": true,
      "nb_thread": 1,
      "log_level": "WARNING",
      "output": "NONE",
      "next_filter": null,
      "config": {},
      "mmdarwin_parameters": []
    }
  },
  {
    "model": "darwin.DarwinBuffering",
    "fields": {
      "interval": 300,
      "required_log_lines": 10,
      "destination_filter": 3
    }
  }
]